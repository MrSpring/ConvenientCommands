buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
//
    }
}

apply plugin: 'forge'

String mc_version = "1.7.10"
String mod_version = "1.0.0"
version = "${mod_version}-${mc_version}"
group = "dk.mrspring" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ConvenientCommands"
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

minecraft {
    version = "1.7.10-10.13.3.1381-1.7.10"
    assetDir = "eclipse/assets"
}

repositories {
}

configurations {
    deployerJars
}

dependencies {
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

sourceSets {
    api {
        java {
            srcDir "$projectDir"
            include "src/api/java"
        }
    }
}

jar() {
    from(sourceSets.main.output, sourceSets.api.output)
}

task sourceJar(type: Jar) {
    from(sourceSets.main.java, sourceSets.api.output)
    classifier = "src"
}

task devJar(type: Jar) {
    from (sourceSets.main.output, sourceSets.api.output)
    classifier = "deobf"
}

task apiJar(type: Jar) {
    from (sourceSets.api.output)
    classifier = "api"
}

artifacts {
    archives sourceJar, devJar, apiJar
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.10"
}

uploadArchives {
    dependsOn "reobf"
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "${config.maven_url}") {
                authentication(userName: "${config.maven_user}", password: "${config.maven_pass}")
            }
        }
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}
